---
title: 'Mobile Apps'
order: 3
---

extends ../../../templates/standard

block content
  :markdown
    __NATIVE MOBILE EXPERIENCE WITH OPEN WEB TECHNOLOGIES__

    As web technologies have reduced the pain and hassle of cross-platform development on the desktop, the problem has shifted into the mobile space. To avoid neglecting broad swatches of the market, a mobile app must support iOS and Android at a minimum. Ideally second-tier platforms like Windows Phone and Blackberry would be supported as well.

    We use web technologies wherever possible to address multiple platforms with a single codebase. Excellent frameworks like Adobe PhoneGap put a native wrapper around mobile web apps while giving them access to hardware features like location, camera and telephony services.

    Of course delivering a top-notch user experience sometimes means going native. We have Objective C and Java specialists on staff who can craft native code for iOS and Android when specific app requirements call for this.


    __iOS Apps Crafted by World-Class Designers, User Experience Specialists and Software Developers__

    Apple's Cocoa Touch framework is an outstanding platform for creating gorgeous, highly responsive mobile apps. World-class iOS development is hard, however, requiring the collaboration of experienced software architects, user experience specialists and graphic designs. Even good web developers struggle to produce acceptable results.

    Our software professionals feel completely at home implementing the software architectures for sophisticated iPhone and iPad apps. Heck, we even implemented our own browser! We still prefer to use web technologies for portability, but when circumstances so dictate we are not afraid to go down to the bare metal.


    __Web Apps with Native User Experience on iOS, Android and Beyond__

    To use web technologies to develop native-seeming mobile apps requires both a native wrapper and APIs that give JavaScript code access to hardware features like the camera and accelerometer. Based on the open-source Cordova project, Adobe Phone Gap provides both of these and is one of the most popular frameworks for portable mobile app development.

    One of PhoneGap's nicest features is the use of plugins to integrate native code into web apps when necessary. So while we strive to use a single portable code base whenever possible, we are not forced to do so when specific functional or performance requirements call for native iOS or Android code.


    __Android Apps__
