---
title: 'Browser Extensions'
order: 2
---

extends ../../../templates/standard

block content
  :markdown
    __EXTENDING THE WEB__

    Browser extensions pick up where web apps leave off, extending the web programming model beyond the boundaries of the web page and into the browser itself. They can be used to customize, repurpose and mashup specific web sites as well as adding functionality to the browser that can be used and useful across the entire web.

    Addons are hard because they have never benefitted from standardization. Every browser has its own completely proprietary extensibility framework. At Salsita we are intimately familiar with the native addon frameworks of the major browsers. In addition, we are pioneers in promoting cross-browser addon development with our Ancho framework and extensible Kitt browser for iPhone.


    __Browser Extensions Powered By Web Technologies__

    Chrome is a relative latecomer to the addon game. This is mostly an advantage since they have been able to benefit from the experience of those who came before. Unlike the somewhat sprawling frameworks of Firefox and Internet Explorer, Chrome’s addon framework is straightforward, consistent and accessible to the average web developer.

    Because Chrome bases its framework on web standards (JavaScript, HTML, CSS), addons can use popular web tools and frameworks. At Salsita we specialize in creating highly modular, flexible and maintainable addons using libraries like Angular.js, RequireJS and Mocha.


    __Browser Extensions by C++ Professionals__

    Internet Explorer doesn’t have an extension framework per se. Instead, it exposes some interfaces using the same Component Object Model (COM) used to develop Windows applications. Addons can be developed using C# and .NET, but performance and memory management problems often result. Bottom line is you’ve got to be a serious C++ hacker to get even a trivial addon working in IE.

    Salsita has a number of IE specialists on staff, as witnessed by our pioneering work on Ancho. If cross-browser support is not a requirement, we can write elegant, maintainable, high-performance IE addons directly in C++.


    ##Firefox Extensions by Mozilla Specialists

    Mozilla deserves credit for giving Firefox the first true browser extensibility framework way back in the late 1990’s. It is still impressive in the power and flexibility it offers addon authors to modify both the user interface and the inner workings of the browser. At the same time, the framework is showing its age, and a high level of expertise is needed to master the broad range of proprietary languages and programming interfaces used by Firefox.

    We really know Firefox. Our CEO Matthew Gertner has worked on sophisticated Firefox extensions for almost a decade, including leading the development of Mozilla Lab’s own Prism project. This expertise has gone into the Firefox version of Ancho as well as custom-built Firefox addons created for our clients.


    __The First Extensible Browser for iPhone__

    About a year ago, a number of our browser extension clients started asking about mobile. Unfortunately there is virtually no browser extension support on Android and none at all on iOS. So we did the obvious thing: we wrote our own browser.

    Kitt is a full-featured iPhone browser (iPad and Android planned) that supports a healthy subset of the Chrome extension API. Addon vendors can now offer an attractive mobile solution to their users with minimal porting effort of their existing Chrome addons.

    For more information, visit the Kitt website.


    __A Single Codebase for Chrome, Internet Explorer and Firefox Using the Chrome Extension Framework__

    Ancho is a unique technology developed by Salsita that enables Chrome extensions to run, unmodified, in Internet Explorer and Firefox.

    Due to their inherent incompatibilities, developing and maintaining an extension for multiple browser can be a nightmare. A few cross-browser frameworks exists, but they offer limited functionality and lock you into a proprietary API. With Ancho you just write your Chrome extension normally and get IE and Firefox support for free*. The best part is that thereÕs no need to port your changes when you update the Chrome version with a new feature or bug fix.

    Visit the Ancho website for documentation and licensing information.

    <sup><sub>*We support a growing subset of the full Chrome extension API.</sub></sup>
