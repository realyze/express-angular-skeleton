---
title: 'Web Apps'
order: 1
---

extends ../../../templates/standard

block content
  :markdown
    __MODERN WEB APPS DEVELOPED BY WORLD-CLASS SOFTWARE PROFESSIONALS__

    Web apps have evolved over the years from static web pages to dynamic applications driven by client-side JavaScript and asynchronous data. As they mature, they are becoming more and more like traditional apps: complex software architectures that are downloaded and execute on the client

    Modern web apps use a single-page model where only the parts of a page that have changed need to be reloaded. Increasingly they are responsive, so the same application can be used on all devices and screen sizes, with the user interface adapting to make the best use possible of the screen real estate available.

    This kind of software is out of reach of the typical web developer. At Salsita we hire real computer science professionals and train them to be top-notch full-stack JavaScript developers. We also have design, user experience and CSS specialists on staff to help take your project all the way from idea to deployment.


    __One App for Every Screen Size__

    Websites designed for desktop and laptop computers generally do not look good on the smaller screens of tablets and smartphones. Until recently, this meant developing your app (at least) twice: once for big screens and once for mobile devices. Worse, it meant maintaining two applications and struggling to keep them in sync as new features and content are added.

    This state of affairs is now much improved. Clever CSS stylesheets can be designed to reformat the user interface to adapt to the screen real estate available. The underlying user interface design is shared, however, so only one universal version of your application need be developed and maintained.


    __Single Page Apps__

    One of the least attractive aspects of traditional web apps is the need to reload pages whenever the contents of the page changes. This jarring effect reminds us that we are in a web browser rather than a slick native application.

    In recent years, improved programming techniques and frameworks like Ember.js, Backbone.js and AngularJS (our favorite at Salsita) have made it possible to develop applications using web technologies while getting the smooth feel of a native app. Data is reloaded and rendered only when necessary. Sexy CSS transitions can be used when views change, so your users never end up starting at a white screen waiting for the next page to load.


    __GOOGLE SCRIPTS__
