---
title: 'Frameworks'
order: 3
---

extends ../../../templates/standard.jade

block content
  :markdown
    ## Extensible something
    __There's also an option to do cool formatting like this__
    Due to its extensible nature, JavaScript is particularly suitable to writing generic frameworks. It sometimes seems that every would-be JavaScript expert has to write their own framework in order to earn guru status. Thousands of open-source frameworks, for everything from color management to single signon to a massive ecosystem server-side JavaScript, can be found on GitHub and elsewhere.

    __Bootstrap__

    Body


    __SERVER-SIDE JAVASCRIPT WITH NODE.JS__

    One of the most unexpected consequences of Googleâ€™s superlative work on the V8 JavaScript engine used by Chrome is the rise of server-side JavaScript. Node.js is a standalone framework, based on V8, for deploying high-performance JS applications. It ships with libraries that make it particularly well-suited for implementing scalable web applications. The fantastic Node Package Manager (npm) makes it easy to find, install and deploy once of the thousands of Node packages that add new capabilities to your application.

    There are a number of excellent server-side web platforms, but when given the choice we prefer to use Node.js. This enables us to share code and know-how between the server and browser components.


    __HTML EXTENDED FOR WEB APPS, COURTESY OF GOOGLE__

    The problem with client-side JavaScript frameworks is that there are so many great ones to choose from. We work actively with a number of frameworks, but our favorite is AngularJS.

    AngularJS offers two-way data bindings, model-view-controller support, templates and custom directives so you can define your own HTML tags. It is also designed for testability thanks to a built-in dependency injection subsystem. Best of all, it is backed by Google so the project has plenty of resources available to it and is evolving and improving rapidly.


    __MINIMALISTIC MODEL-VIEW-CONTROLLER FRAMEWORK FOR WEB APPS (AND MORE)__

    Backbone is a minimalistic model-view-controller framework that offers the basic skeleton for writing a modular web application. It is less ambitious than AngujarJS, so you can choose best-of-breed third-party components for things like templates.

    Clients frequently request that we work on Backbone projects and a number of our team members have extensive experience in this area. We have also used Backbone for several browser addon projects.
